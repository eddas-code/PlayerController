using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerController : MonoBehaviour
{
    [Header("Movement Settings")]
    public float movementForce = 10f; // Force applied for movement
    public float jumpForce = 5f; // Force applied for jumping

    [Header("Ground Detection")]
    public float rayDistance = 1f; // Length of the raycast for ground detection
    public LayerMask groundLayer; // Layer used for identifying ground

    private new Rigidbody rigidbody; // Reference to the Rigidbody component
    private bool isGrounded; // Tracks if the player is on the ground
    private int jumpCount; // Tracks the number of jumps
    private float horizontalInput; // Stores horizontal axis input
    private float verticalInput; // Stores vertical axis input

    private void Start()
    {
        // Initialize Rigidbody reference
        rigidbody = GetComponent<Rigidbody>();
    }

    private void Update()
    {
        // Get player input
        horizontalInput = Input.GetAxis("Horizontal");
        verticalInput = Input.GetAxis("Vertical");

        // Check for jump input
        if (Input.GetKeyDown(KeyCode.Space))
        {
            Jump();
        }
    }

    private void FixedUpdate()
    {
        // Apply movement force and check ground status
        ApplyMovementForce();
        CheckIfGrounded();
    }

    private void ApplyMovementForce()
    {
        // Apply force based on player input
        Vector3 movement = new Vector3(horizontalInput, 0f, verticalInput) * movementForce;
        rigidbody.AddForce(movement, ForceMode.Force);
    }

    private void CheckIfGrounded()
    {
        // Perform a raycast to check if the player is grounded
        if (Physics.Raycast(transform.position, Vector3.down, rayDistance, groundLayer))
        {
            isGrounded = true;
        }
        else
        {
            isGrounded = false;
        }
    }

    private void Jump()
    {
        // Apply upward force for jumping
        rigidbody.AddForce(Vector3.up * jumpForce, ForceMode.Impulse);
        jumpCount++;
    }

    private void OnDrawGizmos()
    {
        // Visualize the ground detection ray in the Scene view
        Gizmos.color = Color.red;
        Gizmos.DrawRay(transform.position, Vector3.down * rayDistance);
    }
}
